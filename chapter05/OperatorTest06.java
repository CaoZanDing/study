/*
    + 运算符
        1、+ 运算符在java语言中有两个作用。
            作用1：求和
            作用2：字符串拼接

        2、什么时候求和？什么时候进行字符串的拼接呢？
            当 + 运算符两边都是数字类型的时候，求和。
            当 + 运算符两边任意一边是字符串类型，那么这个 + 会进行字符串的拼接操作。

        3、一定要记住： 字符串拼接完之后的结果还是一个字符串。
 */
public class OperatorTest06{
    public static void main(String[] args){
        int nianLing = 35;
        System.out.println("年龄="+nianLing);// + 在这里进行字符串的拼接

        int a = 100;
        int b = 200;
        int c = a+b;// + 在这里进行求和
        System.out.println(c);

        //注意：当一个表达式当中有多个加号的时候
        //遵循"自左向右"的顺序依次执行。（除非额外添加了小括号，小括号的优先级高）
        System.out.println(a+b+"110");
        //第一个 + 先运算，由于第一个 + 左右两边都是数字，所以会进行求和。
        //求和之后结果是300，代码就变成了： System.out.println(300+"110");
        //最后结果是一个字符串 300110

        System.out.println(a+(b+"110"));
        //先执行小括号当中的程序：b+"110"，这里的 + 会执行字符串的拼接
        //拼接之后的结果是："200110"，这个结果是一个字符串类型。
        //代码就变成了：System.out.println(a+"200110");
        //这个时候的 + 还是进行字符串的拼接。最终结果是; "100200110"

        //在控制台上输出"100+200=300"
        System.out.println(a+"+"+b+"="+c);

        System.out.println(a+"+"+b+"="+a+b);
        //以下表达式中没有小括号，所以遵循自左向右的顺序依次执行。
        //第1,2，3,4个加号运行之后是一个字符串"100+200=100"
        //然后最后这个字符串再和最后一个b变量进行字符串的拼接："100+200=100200"
        System.out.println(a+"+"+b+"="+(a+b));// "100+200=300"
        //和上面程序不一样的地方是：最后一个加号先执行，并且会先进行求和运算。

        //在java语言中怎么定义字符串类型的变量呢?
        //int i = 10;（int是整数型  i是变量名  10是字面量
        String name = "李相赫";
        //(String是字符串类型，并且String不属于基本数据类型范畴，属于引用数据类型。）
        // name 是变量名，只要是合法的标识符就行。
        // "jack" 是一个字符串型字面量。
        System.out.println("登录成功欢迎"+name+"回来");
        //口诀：加一个双引号"",然后双引号之间加两个加号"++",然后两个加号之间加变量名"+name+".
    }
}