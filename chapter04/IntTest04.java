/*
    java中有一个语法规则：
        当这个整数型字面量没有超出byte/short的取值范围，那么这个整数型字面量可以直接赋值给byte/short类型的变量。


    这种预发机制是为了方便写代码而存在的。
 */
public class IntTest04{
    public static void main(String[] args){
        //byte b = 300;
        //300 被默认当做int类型
        //b变量是byte类型
        //大容量转换成小容量，要想编译通过，必须使用强制类型转换符
        //错误：不兼容的类型：从int转换到byte可能会有损失

        byte b = (byte)300;
        //虽然编译通过了，但是可能精度损失
        //300这个int类型对应的二进制：00000000 00000000 00000001 00101100
        //byte占用1个字节，砍掉前3个字节，结果是：00101100（44）
        System.out.println(b);// 44

        byte x = 1;
        byte y  = 127;
        // 1是int类型，默认被当做int类型来看。
        //x，y是byte类型，1个字节，大容量无法直接转换成小容量。
        //按说是编译报错的。
        //当整数型字面量没有超出byte类型的取值范围的时候，该字面量可以直接赋值给byte类型的变量。

        //byte z = 128;
        //错误：不兼容的类型：从int转换到byte可能会有损失

        short s = 1;
        short s1 =32467;
        //当整数型字面量没有超出short类型的取值范围的时候，该字面量可以直接赋值给short类型的变量。

        //short s2 = 32468;
        //错误：不兼容的类型：从int转换到short可能会有损失

    }
}